@model IEnumerable<FailTracker.Web.Models.Issues.IssueViewModel>
@{
    ViewBag._Title = "View Issues";
}

<script type="text/javascript">
	ViewBag.buildDetailsUrl = function (id) {
		return "@(Html.BuildUrlFromExpression<IssuesController>(c => c.Details(Guid.Empty)))".replace("@Guid.Empty", id)
	}
</script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Issues/Dashboard.js")"></script>

<div id="issue-preview-dialog" class="dialog">
</div>

<h2>Issues</h2>
<table>
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>Type</th>
			<th>Title</th>
			<th>Size</th>
			<th>Assigned To</th>
			<th>&nbsp;</th>
		</tr>
	</thead>
	<tbody>
		@foreach(var issue in Model){
		<tr>
			<td><span class="ui-icon ui-icon-search issue-preview button" data-issue-id="@issue.ID"></span></td>
			<td>@issue.Type</td>
			<td>@(Html.ActionLink<IssuesController>(c => c.View(issue.ID), issue.Title))</td>
			<td>@issue.Size</td>
			<td>@Html.DisplayFor(m => issue.AssignedTo)</td>
			<td><span class="ui-icon ui-icon-trash issue-delete button" data-issue-id="@issue.ID"></span></td>
		</tr>
		}
	</tbody>
</table>
<p>@(Html.ActionLink<IssuesController>(c => c.AddIssue(), "Add New Issues", new { @class="button"}))</p>

